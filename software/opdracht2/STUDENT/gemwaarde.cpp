// -*- C++ -*- generated by wxGlade 0.4 on Fri Feb 16 10:31:09 2007
/*!
@file
Opdracht 2 DSB practicum. Werk deze opdracht verder uit aan de hand van het kommentaar.
Assignment 2 DSB practical work. Elaborate this assignment on the basis of the comments.

@version $Rev: 313 $
@author $Author: ewout $

@copyright Copyright 2006-2022 ir drs E.J Boks, Hogeschool van Arnhem en Nijmegen. https://ese.han.nl

$URL: https://ese.han.nl/svn/dsbpracticum/trunk/2022/software/opdracht2/STUDENT/gemwaarde.cpp $
$Id: gemwaarde.cpp 313 2023-01-30 13:54:35Z ewout $
************************************************************************/

#include <wx/filename.h>
#include <wx/wfstream.h>
#include <wx/txtstrm.h>

#include <dsbRingBuffer.h>
#include <expAverage.h>
#include "gemwaarde.h"

#ifndef OnderwijsOntwikkeling
#if defined(InterfaceTaalNederlands)
/* Verwijder dit directief na het invullen van de naam en het studentnummer hieronder. */
#error  "Student naam en nummer moeten beneden in de velden worden ingevuld."
#elif defined (InterfaceTaalEnglish)
/* Remove this directive after filling out name and student number below. */
#error  "Student name and number must be entered into the fields below."
#endif
#endif

/********  Naam/name     :               ******/
/********  Studentnummer :               ******/

void GemWaardeVenster::drawDataHandler(wxCommandEvent &event)
{
#error “Dit deel van de software ontbreekt — this part of the software is missing.”
/* Beste leerling, dit deel van de software ontbreekt. Vul dit deel aan volgens de opdracht.  
   Dear student, this part of the software is missing. Complete this part accoording to the assignment.
*/

	/* laat dit hieronder staan. / Leave this statement in place. */
	gemVeranderd = false;
}

/*********** Geachte studenten , hieronder NIETS veranderen.              ******/
/*********** Honoured students, do NOT alter anything below this line.  ******/

/*************  Hoofdvenster ******************/
GemWaardeVenster::GemWaardeVenster(DesktopApp &appRef, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
		wxFrame(nullptr, id, title, pos, size, (wxDEFAULT_DIALOG_STYLE|wxMINIMIZE_BOX|wxMAXIMIZE_BOX|wxRESIZE_BORDER|wxSYSTEM_MENU| wxCAPTION|wxFULL_REPAINT_ON_RESIZE)),
		app(appRef),
		origPen(wxPen(wxColour(wxT("RED")), 1, wxPENSTYLE_SOLID)),
		gemWaardePen(wxPen(wxColour(wxT("BLUE")), 2, wxPENSTYLE_SOLID)),
		grafiekGrootte(wxSize(1000,500)),
		appConfig(app.geefAppConfig()) ,   /* verkrijg de globale config pointer */
		DemoTekst(
#ifndef OnderwijsOntwikkeling
				_("Developer")+wxT(": ")+wxT(GebruikerNaam))
#else
				_("Demo version"))
#endif
		{
    // begin wxGlade: GemWaardeVenster::GemWaardeVenster
    SetSize(wxSize(953, 1032));
    panel_1 = new wxPanel(this, wxID_ANY);
    scrolPaneel = new wxScrolledWindow(panel_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxBORDER_SUNKEN|wxTAB_TRAVERSAL|wxFULL_REPAINT_ON_RESIZE);
    venster_menubar = new wxMenuBar();
    wxMenu *wxglade_tmp_menu;
    wxglade_tmp_menu = new wxMenu();
    wxglade_tmp_menu->Append(wxID_OPEN, _("Open\tCtrl+O"), wxEmptyString);
    Bind(wxEVT_MENU, &GemWaardeVenster::dataLadenHandler, this, wxID_OPEN);
    wxglade_tmp_menu->Append(TekenGrafiekID, _("Draw data\tCtrl+T"), wxEmptyString);
    Bind(wxEVT_MENU, &GemWaardeVenster::drawDataHandler, this, TekenGrafiekID);
    wxglade_tmp_menu->Append(wxID_EXIT, _("Quit\tCtrl+Q"), wxEmptyString);
    Bind(wxEVT_MENU, &GemWaardeVenster::eindeHandler, this, wxID_EXIT);
    venster_menubar->Append(wxglade_tmp_menu, _("File"));
    SetMenuBar(venster_menubar);
    grafiek = new GrafiekVenster(scrolPaneel, GrafiekVensterID, grafiekGrootte);
    const wxString filterSelectionRadioBox_choices[] = {
        _("Standard Moving Average"),
        _("Exponential Moving Average"),
    };
    filterSelectionRadioBox = new wxRadioBox(panel_1, FilterSelectionRadioBoxID, wxEmptyString, wxDefaultPosition, wxDefaultSize, 2, filterSelectionRadioBox_choices, 1, wxRA_SPECIFY_COLS);
    avgValueSlider = new wxSlider(panel_1, AvgValueSliderID, 1, 1, 100, wxDefaultPosition, wxDefaultSize, wxSL_AUTOTICKS|wxSL_HORIZONTAL|wxSL_MIN_MAX_LABELS);
    tekenButton = new wxButton(panel_1, TekenGrafiekID, _("Draw data"));
    dataLadenKnop = new wxButton(panel_1, wxID_OPEN, wxEmptyString);
    eindeKnop = new wxButton(panel_1, wxID_EXIT, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade

	appConfig->SetPath(wxT("/Configuratie"));

	const wxFileName standaard(wxGetHomeDir(),wxT("dollareurokoers.valdat"));
	int keuze,lgGrootte;
	appConfig->Read(wxT("DataPad"),&dataPad,standaard.GetFullPath());
	appConfig->Read(wxT("FilterSoortKeuze"),&keuze,0);
	filterSelectionRadioBox->SetSelection(keuze);
	appConfig->Read(wxT("LopendGemiddeldeGrootte"),&lgGrootte,10);
	avgValueSlider->SetValue(lgGrootte);

	grafiek->zetOorsprong(wxPoint(0,0));
	grafiek->zetGroteTekst(DemoTekst, wxPoint(100,100));
}

GemWaardeVenster::~GemWaardeVenster()
{
	wxGetApp().bewaarHoofdVensterGrootte();

	appConfig->SetPath(wxT("/Configuratie"));

	appConfig->Write(wxT("DataPad"),dataPad);
	appConfig->Write(wxT("FilterSoortKeuze"),filterSelectionRadioBox->GetSelection());
	appConfig->Write(wxT("LopendGemiddeldeGrootte"),avgValueSlider->GetValue());
}


BEGIN_EVENT_TABLE(GemWaardeVenster, wxFrame)
    // begin wxGlade: GemWaardeVenster::event_table
    EVT_RADIOBOX(FilterSelectionRadioBoxID, GemWaardeVenster::filterGeuzeGemaaktHandler)
    EVT_COMMAND_SCROLL(AvgValueSliderID, GemWaardeVenster::gemInstelwaardeVeranderdHandler)
    EVT_BUTTON(TekenGrafiekID, GemWaardeVenster::drawDataHandler)
    EVT_BUTTON(wxID_OPEN, GemWaardeVenster::dataLadenHandler)
    EVT_BUTTON(wxID_EXIT, GemWaardeVenster::eindeHandler)
    // end wxGlade

				EVT_UPDATE_UI(AvgValueSliderID, GemWaardeVenster::lopendGemiddeldeGrootteUpdateHandler)
				EVT_UPDATE_UI(TekenGrafiekID, GemWaardeVenster::tekenUpdateHandler )

END_EVENT_TABLE();


void GemWaardeVenster::lopendGemiddeldeGrootteUpdateHandler(wxUpdateUIEvent &event)
{
	/* Deze event handler zorgt er voor dat de knop pas bruikbaar wordt */
	/* wanneer dataGeladen op true wordt gezet */
	event.Enable((true == dataGeladen));
}

void GemWaardeVenster::tekenUpdateHandler(wxUpdateUIEvent &event)
{
	/* Deze event handler zorgt er voor dat de tekenknop pas bruikbaar wordt */
	/* als dataGeladen en gemGeladen op true zijn gezet */
	event.Enable(((true == dataGeladen) && (true == gemVeranderd)));
}

void GemWaardeVenster::dataLadenHandler(wxCommandEvent &event)
{
	wxFileName bestand(dataPad);
	wxFileDialog dialoog(this,
	                     _("Open the data file. Please supply a list of one value per line."),
	                     bestand.GetPath(),
	                     bestand.GetFullName(),
	                     wxT("valuta data bestanden (*.valdat)|*.valdat"));


	if (wxID_OK == dialoog.ShowModal())
	{
		bestand = wxFileName(dataPad = dialoog.GetPath());

		const wxString naam(dialoog.GetPath());
		wxFileInputStream dataStroom(bestand.GetFullPath());

		if (true != dataStroom.IsOk())
		{
			const wxString fout(_("Could not open :") + bestand.GetFullName());
			wxLogError(fout);
		}
		else
		{
			wxTextInputStream stroom(dataStroom);
			/* maak de array leeg */
			data.Empty();

			wxString getal(stroom.ReadLine());

			/* lees de stroom uit en converteer naar double */
			while (getal != wxEmptyString)
			{
				double waarde;
				wxLogDebug(wxT("getal=")+getal);
				if (false == getal.ToDouble(&waarde))
				{
					/* vervang door , door .  */

					/* mogelijk locale waar komma wordt verwacht */
					/* vervang in de gehele string */
					getal.Replace(wxT(","),wxT("."),true);
					if (false == getal.ToDouble(&waarde))
					{
						wxLogError(_("Error reading the input value :")+getal);
						return;
					}
				}
				wxLogDebug(wxString::Format(wxT("waarde = %lf"),waarde));
				data.Add(waarde- valutaTekenOffset);

				getal = stroom.ReadLine();
			}

			data.Shrink(); /* geef all niet gebruikte geheugen terug */
			dataGeladen = true;

		}
	}
}

void GemWaardeVenster::gemInstelwaardeVeranderdHandler(wxScrollEvent &event)
{
	gemVeranderd = true;
}

void GemWaardeVenster::filterGeuzeGemaaktHandler(wxCommandEvent &event)
{
	gemVeranderd = true;
}


void GemWaardeVenster::eindeHandler(wxCommandEvent &event)
{
	Close();
}



// wxGlade: add GemWaardeVenster event handlers
void GemWaardeVenster::set_properties()
{
    // begin wxGlade: GemWaardeVenster::set_properties
    SetTitle(_("Assignment 2 : the running average"));
    SetFont(wxFont(12, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, 0, wxT("")));
    scrolPaneel->SetScrollRate(10, 10);
    filterSelectionRadioBox->SetSelection(0);
    panel_1->SetBackgroundColour(wxColour(98, 255, 84));
    // end wxGlade

}


void GemWaardeVenster::do_layout()
{
    // begin wxGlade: GemWaardeVenster::do_layout
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* hoofdSizer = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_2 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_5 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_7 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_3 = new wxStaticBoxSizer(new wxStaticBox(panel_1, wxID_ANY, _("Averaging control parameter")), wxHORIZONTAL);
    wxBoxSizer* sizer_4 = new wxBoxSizer(wxVERTICAL);
    sizer_4->Add(grafiek, 1, wxEXPAND, 0);
    scrolPaneel->SetSizer(sizer_4);
    hoofdSizer->Add(scrolPaneel, 4, wxEXPAND, 0);
    sizer_2->Add(filterSelectionRadioBox, 0, wxEXPAND, 0);
    sizer_3->Add(avgValueSlider, 1, wxEXPAND, 0);
    sizer_2->Add(sizer_3, 1, wxEXPAND, 0);
    sizer_7->Add(tekenButton, 1, wxALL|wxEXPAND, 10);
    sizer_7->Add(dataLadenKnop, 1, wxALL|wxEXPAND, 10);
    sizer_5->Add(sizer_7, 1, wxEXPAND, 0);
    sizer_5->Add(eindeKnop, 0, wxALL|wxEXPAND, 10);
    sizer_2->Add(sizer_5, 1, wxEXPAND, 0);
    hoofdSizer->Add(sizer_2, 0, wxEXPAND, 0);
    panel_1->SetSizer(hoofdSizer);
    sizer_1->Add(panel_1, 1, wxEXPAND, 0);
    SetSizer(sizer_1);
    Layout();
    Centre();
    // end wxGlade
}


/************* Applikatie ( de "main()" van deze GUI applikatie) ******/
IMPLEMENT_APP(GemWaardeOpdracht);

GemWaardeOpdracht::GemWaardeOpdracht()  : DesktopApp(wxT("DSPESE2"))
{

}

bool GemWaardeOpdracht::OnInit()
{

	auto * const venster = new GemWaardeVenster(*this,
	                                                        -1,
	                                                        _("Running average of the US$ <--> € exchange rate."));

	zetHoofdVenster(venster);

	venster->Show();
	return(true);
}



